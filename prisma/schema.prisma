generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                  Int             @id            @default(autoincrement())
  firstName           String          @db.VarChar(255)
  lastName            String          @db.VarChar(255)
  email               String          @db.VarChar(255) @unique
  dateOfBirth         DateTime       
  createdAt           DateTime        @default(now()) @db.Timestamp(6)
  profilePicture      String?
  logs                Log[]           // Relation field to Log
  healthConditions    HealthCondition[] // Relation field to HealthCondition
  role                Role
  medications         Medication[]
}

model Log {
  id                Int          @id @default(autoincrement())
  title             String
  severity         Severity
  userId           Int
  weather          Weather
  temperature      Temperature
  eatenToday       Json?        // Store a list of food items as JSON
  drankToday       Json?        // Store a list of drink items as JSON
  toiletriesUsed   Json?        // Store a list of toiletry items as JSON
  user             User         @relation(fields: [userId], references: [id], onDelete: Cascade) // Relation to User
  createdAt        DateTime     @default(now()) @db.Timestamp(6) // Automatically set to the current time
  updatedAt        DateTime     @updatedAt @db.Timestamp(6) // Automatically updated on every update
}

model HealthCondition {
  id                  Int             @id            @default(autoincrement())
  name                String          @db.VarChar(255)
  description         String?
  userId              Int             // Foreign key to User
  user                User            @relation(fields: [userId], references: [id], onDelete: Cascade) // Cascade delete health conditions when user is deleted
}

model Medication {
  id                  Int             @id            @default(autoincrement())
  name                String          @db.VarChar(255)
  dosage              String          @db.VarChar(255)
  userId              Int
  user                User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

enum Weather {
  SUNNY
  CLOUDY
  RAINY
  SNOW
}

enum Temperature {
  COLD
  WARM
  HOT
}

enum Severity {
  ONE
  TWO
  THREE
}